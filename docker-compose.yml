version: '3'

services:
  shared_rabbitmq:
    container_name: rabbitmq
    image: 'rabbitmq:3.10.5-management'
    restart: unless-stopped
    ports:
      - "5630:5672"
      - "8090:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=pokedex
      - RABBITMQ_DEFAULT_PASS=c0d3ly

  shared_prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.36.1
    volumes:
      - ./etc/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9999:9090"

  web_mysql:
    container_name: mysql-web
    image: mariadb:10.7.4
    ports:
      - "3361:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: ["CMD", "mysqladmin", "--user=root", "--password=", "--host=127.0.0.1", "ping", "--silent"]
      interval: 2s
      timeout: 10s
      retries: 10
    command: ["--default-authentication-plugin=mysql_native_password"]

  web_frontend_php:
    container_name: php-web-frontend
    user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8031:8031"
      - "9031:9001"
    volumes:
      - .:/app:delegated
    depends_on:
      - shared_rabbitmq
      - shared_prometheus
      - web_mysql
    command: symfony serve --dir=apps/web/frontend/public --port=8031

  web_backend_php:
    container_name: php-web-backend
    user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8030:8030"
      - "9030:9001"
    volumes:
      - .:/app:delegated
    depends_on:
      - shared_rabbitmq
      - shared_prometheus
      - web_mysql
    command: symfony serve --dir=apps/web/backend/public --port=8030

  backoffice_mysql:
    container_name: mysql-backoffice
    image: mariadb:10.7.4
    ports:
      - "3360:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: ["CMD", "mysqladmin", "--user=root", "--password=", "--host=127.0.0.1", "ping", "--silent"]
      interval: 2s
      timeout: 10s
      retries: 10
    command: ["--default-authentication-plugin=mysql_native_password"]

#  backoffice_elasticsearch:
#    container_name: elastic-backoffice
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.3
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  backoffice_backend_php:
    container_name: php-backoffice-backend
    user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8040:8040"
      - "9040:9001"
    volumes:
      - .:/app:delegated
    depends_on:
#      - shared_rabbitmq
#      - shared_prometheus
#      - backoffice_elasticsearch
      - backoffice_mysql
    command: symfony serve --dir=apps/backoffice/backend/public --port=8040

  backoffice_frontend_php:
    container_name: php-backoffice-frontend
    user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8041:8041"
      - "9041:9001"
    volumes:
      - .:/app:delegated
    depends_on:
#      - shared_rabbitmq
#      - shared_prometheus
#      - backoffice_elasticsearch
      - backoffice_mysql
    command: symfony serve --dir=apps/backoffice/frontend/public --port=8041